# Generated by Django 4.1.3 on 2023-03-01 11:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Calculator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MainsGas', models.IntegerField()),
                ('Fuel', models.IntegerField()),
                ('Oil', models.IntegerField()),
                ('Coal', models.IntegerField()),
                ('Wood', models.IntegerField()),
                ('GridElectricity', models.IntegerField()),
                ('Electricity', models.IntegerField()),
                ('WFLandfill', models.IntegerField()),
                ('WFReuse', models.IntegerField()),
                ('WFCharity', models.IntegerField()),
                ('BottleRecycling', models.IntegerField()),
                ('AluminiumRecycling', models.IntegerField()),
                ('GWLandfill', models.IntegerField()),
                ('GWRecycling', models.IntegerField()),
                ('SpecialWaste', models.IntegerField()),
                ('CompanyGoodsDelivery', models.IntegerField()),
                ('ContractedGoodsDelivery', models.IntegerField()),
                ('Travel', models.IntegerField()),
                ('UKFlights', models.IntegerField()),
                ('InternationalFlights', models.IntegerField()),
                ('StaffCommute', models.IntegerField()),
                ('BeefLamb', models.IntegerField()),
                ('OtherMeat', models.IntegerField()),
                ('LobsterFarmedPrawn', models.IntegerField()),
                ('Fish', models.IntegerField()),
                ('MilkYogurt', models.IntegerField()),
                ('Cheese', models.IntegerField()),
                ('LocalFruitVegetables', models.IntegerField()),
                ('FreightFruitVegetables', models.IntegerField()),
                ('OtherDriedFood', models.IntegerField()),
                ('BeerKegs', models.IntegerField()),
                ('BeerCans', models.IntegerField()),
                ('BeerBottles', models.IntegerField()),
                ('LowBeerKegs', models.IntegerField()),
                ('LowBeerCans', models.IntegerField()),
                ('LowBeerBottles', models.IntegerField()),
                ('SoftDrinks', models.IntegerField()),
                ('Wine', models.IntegerField()),
                ('Spirits', models.IntegerField()),
                ('KitchenEquipment', models.IntegerField()),
                ('BuildingRepair', models.IntegerField()),
                ('CleaningProducts', models.IntegerField()),
                ('ITMarketing', models.IntegerField()),
                ('MainsWater', models.IntegerField()),
                ('Sewage', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CalculatorConstants',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MainsGas', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('Fuel', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('Oil', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('Coal', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('Wood', models.FloatField()),
                ('GridElectricity', models.FloatField()),
                ('Electricity', models.FloatField()),
                ('WFLandfill', models.FloatField()),
                ('WFReuse', models.FloatField()),
                ('WFCharity', models.FloatField()),
                ('BottleRecycling', models.FloatField()),
                ('AluminiumRecycling', models.FloatField()),
                ('GWLandfill', models.FloatField()),
                ('GWRecycling', models.FloatField()),
                ('SpecialWaste', models.FloatField()),
                ('CompanyGoodsDelivery', models.FloatField()),
                ('ContractedGoodsDelivery', models.FloatField()),
                ('Travel', models.FloatField()),
                ('UKFlights', models.FloatField()),
                ('InternationalFlights', models.FloatField()),
                ('StaffCommute', models.FloatField()),
                ('BeefLamb', models.FloatField()),
                ('OtherMeat', models.FloatField()),
                ('LobsterFarmedPrawn', models.FloatField()),
                ('Fish', models.FloatField()),
                ('MilkYogurt', models.FloatField()),
                ('Cheese', models.FloatField()),
                ('LocalFruitVegetables', models.FloatField()),
                ('FreightFruitVegetables', models.FloatField()),
                ('OtherDriedFood', models.FloatField()),
                ('BeerKegs', models.FloatField()),
                ('BeerCans', models.FloatField()),
                ('BeerBottles', models.FloatField()),
                ('LowBeerKegs', models.FloatField()),
                ('LowBeerCans', models.FloatField()),
                ('LowBeerBottles', models.FloatField()),
                ('SoftDrinks', models.FloatField()),
                ('Wine', models.FloatField()),
                ('Spirits', models.FloatField()),
                ('KitchenEquipment', models.FloatField()),
                ('BuildingRepair', models.FloatField()),
                ('CleaningProducts', models.FloatField()),
                ('ITMarketing', models.FloatField()),
                ('MainsWater', models.FloatField()),
                ('Sewage', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='BrewdogUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('company', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('phone', models.CharField(max_length=50, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='brewdogUser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
